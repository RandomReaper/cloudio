buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath('org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.2')
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '3.2.0')
	}
}

plugins {
    id "com.jfrog.bintray" version "1.4"
    id "com.jfrog.artifactory" version "3.1.0"
}

apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = rootProject.version
group = rootProject.group

repositories {
    mavenLocal()
	jcenter()
}

dependencies {
	compile('org.springframework.boot:spring-boot:1.3.5.RELEASE')
	compile('org.springframework.boot:spring-boot-autoconfigure:1.3.5.RELEASE')
	compile('org.springframework.amqp:spring-amqp:1.5.6.RELEASE')
	compile('org.springframework.amqp:spring-rabbit:1.5.6.RELEASE')
	compile('org.springframework.security:spring-security-core:4.0.4.RELEASE')
	compile('org.slf4j:slf4j-api:1.7.21')
	compile('org.jetbrains.kotlin:kotlin-stdlib:1.0.2')
	compile('com.fasterxml.jackson.module:jackson-module-kotlin:2.6.7')
	testCompile('org.springframework.boot:spring-boot-starter-test:1.3.5.RELEASE')
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }

        mavenSources(MavenPublication) {
            from components.java
            artifact sourcesJar
        }

        mavenJavadoc(MavenPublication) {
            from components.java
            artifact javadocJar
        }
    }
}

artifactory {
    contextUrl = 'https://oss.jfrog.org/artifactory'
    publish {
        repository {
            if (project.version.endsWith('-SNAPSHOT'))
                repoKey = 'oss-snapshot-local'
            else
                repoKey = 'oss-release-local'
            username = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
            password = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
        }
        defaults {
            publications('mavenJava', 'mavenSources', 'mavenJavadoc')
            publishArtifacts = project.version.endsWith('SNAPSHOT')
            publishPom = true
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    configurations = ['archives']
    pkg {
        repo = 'clients'
        name = project.group + ':' + project.name
        userOrg = 'cloudio-project'
        desc= 'cloud.iO Java endpoint library/client'
        websiteUrl = 'http://cloudio.hevs.ch'
        issueTrackerUrl = 'https://github.com/cloudio-project/cloudio-endpoint-java/issues'
        vcsUrl = 'https://github.com/cloudio-project/cloudio-endpoint-java'
        licenses = ['MIT']
        version {
            name = project.version
        }
    }
    publications = ['mavenJava', 'mavenSources', 'mavenJavadoc']
}

task (autodeploy) {
    if (project.version.endsWith('-SNAPSHOT'))
        dependsOn artifactoryPublish
    else
        dependsOn build
}
